<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="NodeImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>129, 17</value>
  </metadata>
  <data name="NodeImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABK
        CAAAAk1TRnQBSQFMAgEBAwEAAdgBAAHYAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEYBgABDFQAAUwBzwHxAUwBzwHxtwABTAHPAfEBTAHQAfEBTAHPAfGBAAFIAccB6wFI
        AcYB6gFIAcYB6gFHAcQB6QFGAcMB6AFGAcIB6AFGAcIB5wFGAcEB5wFFAcEB5gFGAcEB5wFFAcEB5hIA
        AUwBzwHxAUwB0AHxAUwB0AHxAUwBzwHxgQABSQHIAesBjwHnAf8BjgHmAf8BiQHlAf8BiAHlAf8BhgHk
        Af8BhQHkAf8BgwHkAf8BRgHBAecBgwHkAf8BRgHBAecPAAFIAccB6wFMAdAB8QFMAdAB8QFMAdAB8QFM
        Ac8B8QFGAcIB6AFGAcIB5wFGAcEB5wFFAcEB5gFGAcEB5wFFAcEB5g8AAbgBtwG4AbYBtQG2A7QBswGy
        AbMCrAGtAasBqgGrAakBqAGqAacBpgGoAaUBpAGmAqMBpEIAAUkByAHsAZEB5wH/AY8B5wH/AYsB5gH/
        AYkB5QH/AYgB5QH/AYYB5AH/AYUB5AH/AUYBwgHnAYUB5AH/AUYBwgHnDwABSQHIAesBTAHQAfEBTAHQ
        AfEBTAHQAfEBTAHPAfEBhgHkAf8BhQHkAf8BgwHkAf8BmgHpAf8BgwHkAf8BRgHBAecPAAG6AbkBugP7
        BvoD+Qn4A/cBpQGkAaZCAAFKAcoB7QGWAegB/wGUAegB/wGPAecB/wGOAeYB/wGMAeYB/wGLAeYB/wGJ
        AeUB/wFHAcQB6QGBAeEB/AFHAcQB6Q8AAUkByAHsAUwB0AHxAUwB0AHxAUwB0AHxAUwBzwHxAYgB5QH/
        AYYB5AH/AYUB5AH/AZoB6QH/AYUB5AH/AUYBwgHnDwABvAK7A/sSswP4AacBpgGoQgABSgHLAe4BlwHo
        Af8BlgHoAf8BkQHnAf8BjwHnAf8BjgHmAf8BjAHmAf8BiwHmAf8BWAHMAe8BTwHIAewBRwHEAekPAAFK
        AcsB7gFMAdAB8QFMAdAB8QFMAdAB8QFMAc8B8QGOAeYB/wGMAeYB/wGLAeYB/wGaAekB/wGaAekB/wFH
        AcQB6Q8AAbwCuxX7A/gBpwGmAahCAAFKAcsB7gGZAekB/wGXAegB/wGSAecB/wGRAecB/wGPAecB/wGO
        AeYB/wGMAeYB/wGHAeQB/gFHAcQB6QFHAcUB6Q8AAUoBywHuAUwB0AHxAUwB0AHxAUwB0AHxAUwBzwHx
        AY8B5wH/AY4B5gH/AYwB5gH/AYcB5AH+AUcBxAHpAUcBxQHpDwADvQP7ErYD+AGpAagBqkIAAUsBzAHv
        AZoB6QH/AZkB6QH/AZQB6AH/AZIB5wH/AZEB5wH/AY8B5wH/AY4B5gH/AYwB5gH/AUcBxQHqEgABSwHM
        Ae8BTAHQAfEBTAHQAfEBTAHQAfEBTAHPAfEBkQHnAf8BjwHnAf8BjgHmAf8BjAHmAf8BRwHFAeoSAAHE
        AsMV+wP4ArABsUIAAUsBzQHvAZwB6gH/AZoB6QH/AZYB6AH/AZQB6AH/AZIB5wH/AZEB5wH/AY8B5wH/
        AY4B5gH/AUgBxgHqEgABSwHNAe8BTAHQAfEBTAHQAfEBTAHQAfEBTAHPAfEBkgHnAf8BkQHnAf8BjwHn
        Af8BjgHmAf8BSAHGAeoSAAHKAckByAP3CbYM+wG2AbUBtkIAAUwBzwHwAaAB6wH/AZ8B6gH/AZoB6QH/
        AZkB6QH/AZcB6AH/AZYB6AH/AZQB6AH/AZIB5wH/AUkByAHrEgABTAHPAfABTAHQAfEBTAHQAfEBTAHP
        AfEBmQHpAf8BlwHoAf8BlgHoAf8BlAHoAf8BkgHnAf8BSQHIAesSAAHNAcwBywz7A/cD0QavAboBuQG6
        QgABTAHPAfEBogHrAf8BoAHrAf8BnAHqAf8BmgHpAf8BmQHpAf8BlwHoAf8BlgHoAf8BlAHoAf8BSQHI
        AewSAAFMAc8B8QFMAdAB8QFMAc8B8QGWAegB/wGWAegB/wGZAekB/wGXAegB/wGWAegB/wGUAegB/wFJ
        AcgB7BIAAc8BzgHNA/sJtgP7A9ED6gPdA75CAAFMAdAB8QGjAesB/wGiAesB/wGdAeoB/wGcAeoB/wGa
        AekB/wGZAekB/wGXAegB/wGWAegB/wFJAckB7BIAAUwB0AHxAUwBzwHxAaIB6wH/AZ0B6gH/AZwB6gH/
        AZoB6QH/AZkB6QH/AZcB6AH/AZYB6AH/AUkByQHsEgAB0ALPD/sD0QHeAt0BwgLBA71CAAFNAdEB8gFM
        AdAB8QFMAc8B8QFLAc0B7wFLAc0B7wFLAcwB7wFKAcsB7gFKAcsB7gFKAcoB7QFJAckB7RIAAU0B0QHy
        AUwB0AHxAUwBzwHxAUsBzQHvAUsBzQHvAUsBzAHvAUoBywHuAUoBywHuAUoBygHtAUkByQHtEgAB0gHR
        AtADzwHOAs0BzAHLAcgCxwHGAsUBxALDAcUCxAHBAsADvv8AugABQgFNAT4HAAE+AwABKAMAAUADAAEQ
        AwABAQEAAQEFAAGAFwAD/wEAAv8B/AP/AgAC/wH4A/8CAAHgAQMB8AP/AgAB4AEDAeABAwHgAQcCAAHg
        AQMB4AEDAeABBwIAAeABAwHgAQMB4AEHAgAB4AEDAeABAwHgAQcCAAHgAQMB4AEDAeABBwIAAeABBwHg
        AQcB4AEHAgAB4AEHAeABBwHgAQcCAAHgAQcB4AEHAeABBwIAAeABBwHgAQcB4AEHAgAB4AEHAeABBwHg
        AQcCAAHgAQcB4AEHAeABBwIABv8CAAb/AgAL
</value>
  </data>
  <metadata name="mainStatus.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>